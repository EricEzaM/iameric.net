{"componentChunkName":"component---src-templates-snippet-jsx","path":"/snippets/git-change-author-multiple-commits","result":{"data":{"snippet":{"html":"<p>Recently I have been using two different emails for git on the same computer (work and personal). My personal is the default, but on some repositories I want to use a different name and email address. Unfortunately, when I create a repo for work, sometimes I forget to change my email!</p>\n<p>This can be found in a Stack Overflow answer somewhere, but I got tired of finding that every time, so here it is in a place I can always find it!</p>\n<blockquote>\n<p>Note: this will rewrite the git history. Only do this if a) you have not pushed your commits yet, or b) you are the only one working on the project.</p>\n</blockquote>\n<p>Step zero here is to reset your git name/email. Run <code class=\"language-text\">git config --local user.name \"My User name\"</code> and the same with <code class=\"language-text\">user.email</code> to set this only for the repo you are currently in.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> rebase --root -x <span class=\"token string\">\"git commit --amend --no-edit --reset-author --date=<span class=\"token entity\" title=\"\\&quot;\">\\\"</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">git</span> log -n <span class=\"token number\">1</span> --format<span class=\"token operator\">=</span>%aD<span class=\"token variable\">)</span></span><span class=\"token entity\" title=\"\\&quot;\">\\\"</span>\"</span></code></pre></div>\n<ul>\n<li><code class=\"language-text\">--root</code> runs the command on every commit, including the root (first) commit</li>\n<li>\n<p><code class=\"language-text\">-x</code> defines the command we want to run after every commit.</p>\n<ul>\n<li><code class=\"language-text\">--reset-author</code> changes the author user details to the ones you have got set up for your repo.</li>\n<li><code class=\"language-text\">--date=...</code> sets the date for the commit. We <strong>don't</strong> want to change this, so we need specify the date of the existing commit. If we don't, the date will be updated to the date/time you run the command. Might not be a big deal, but still, we can avoid it.</li>\n<li><code class=\"language-text\">$(git log -n 1 --format=%aD)</code> runs the <code class=\"language-text\">git log</code> command, only getting the last commit and formatting it to display the date only. This is run in a subcommand so the result of this command is used in the <code class=\"language-text\">--date=...</code> value.</li>\n</ul>\n</li>\n</ul>\n<p>If you don't want to do it for all commits, you can remove <code class=\"language-text\">--root</code> and instead specify a specific commit to go back to, or use the <code class=\"language-text\">HEAD~X</code> notation.</p>","frontmatter":{"title":"Changing the author on multiple git commits at once","category":"Git","date":"Wednesday November 3rd, 2021"}}},"pageContext":{"slug":"git-change-author-multiple-commits"}},"staticQueryHashes":["1277554887","63159454"]}